{"version":3,"sources":["meteor://ðŸ’»app/packages/kadira_react-layout/lib/react_layout.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E","file":"/packages/kadira_react-layout.js","sourcesContent":["ReactLayout = {};\nReactLayout._domLoaded = false;\nReactLayout._rootProps = {};\nReactLayout._readyCallbacks = [];\n\nReactLayout.setRootProps = function(rootProps) {\n  this._rootProps = rootProps;\n};\n\nReactLayout._buildRootNode = function() {\n  var props = this._rootProps || {};\n  props.id = 'react-root';\n  if(props.className) {\n    props.class = props.className;\n    delete props.className;\n  }\n\n  var propsString = '';\n  for(var key in props) {\n    var value = props[key];\n    propsString += key + '=\"' + value + '\" ';\n  }\n\n  var html = '<div ' + propsString + '></div>';\n  return html;\n};\n\nReactLayout._getRootNode = function() {\n  var rootNode = document.getElementById('react-root');\n\n  if(rootNode) {\n    return rootNode;\n  } else {\n    var rootNodeHtml = this._buildRootNode();\n    var body = document.getElementsByTagName('body')[0];\n    body.insertAdjacentHTML('beforeend', rootNodeHtml);\n    rootNode = document.getElementById('react-root');\n    return rootNode;\n  }\n};\n\nReactLayout.render = function(layoutClass, regions) {\n  if(Meteor.isClient) {\n    return this._renderClient(layoutClass, regions);\n  } else {\n    return this._renderServer(layoutClass, regions);\n  }\n};\n\nReactLayout._renderServer = function(layoutClass, regions) {\n  var el = React.createElement(layoutClass, regions);\n  var elHtml = ReactDOMServer.renderToString(el);\n\n  var rootNodeHtml = this._buildRootNode();\n  var html = rootNodeHtml.replace('</div>', elHtml + '</div>');\n\n  if(Package['kadira:flow-router-ssr']) {\n    var FlowRouter = Package['kadira:flow-router-ssr'].FlowRouter;\n    var ssrContext = FlowRouter.ssrContext.get();\n    ssrContext.setHtml(html);\n  }\n};\n\nReactLayout._renderClient = function(layoutClass, regions) {\n  var self = this;\n  this._ready(function() {\n    var rootNode = self._getRootNode();\n    var el = React.createElement(layoutClass, regions);\n    ReactDOM.render(el, rootNode);\n  });\n};\n\nReactLayout._ready = function(cb) {\n  var self = this;\n  if(self._domLoaded) {\n    cb();\n  } else {\n    self._readyCallbacks.push(cb);\n  }\n};\n\n// wait for DOM is loading\nMeteor.startup(function() {\n  setTimeout(function() {\n    ReactLayout._domLoaded = true;\n    ReactLayout._readyCallbacks.forEach(function(fn) {\n      fn();\n    });\n  }, 10);\n});\n"]}